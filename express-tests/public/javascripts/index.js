// Generated by CoffeeScript 1.6.1
(function() {
  var Refresh, getPage, updateContent;

  $(document).ready($(function() {
    var browser, currURL, data, height, origTitle, origURL;
    browser = BrowserDetect.browser;
    height = $('.page-overlay').height();
    origTitle = document.title;
    origURL = window.location.pathname;
    currURL = origURL;
    console.log(origTitle + "    " + origURL);
    console.log("HEIght: " + $(window).height());
    $('.page-overlay').css({
      'height': $(window).height()
    });
    $('.container').css({
      'height': $(window).height()
    });
    if (origURL === '/') {
      $('.page-overlay').css({
        'top': $(window).height()
      });
      data = $('.container').html();
    } else {
      data = $('.page-overlay').html();
    }
    if (browser !== "Safari") {
      History.pushState({
        title: origTitle,
        url: origURL,
        data: $('.container').html()
      }, origTitle, origURL);
      History.Adapter.bind(window, 'statechange', function() {
        var State, exec;
        State = History.getState();
        console.log(currURL);
        exec = function() {
          currURL = window.location.pathname;
          return updateContent(State.data.data, State.data.title, State.data.url);
        };
        if (State.data.url === '/') {
          console.log("going in");
          return TweenLite.to($('.page-overlay'), 0.6, {
            top: $(window).height(),
            ease: "Power2.easeOut"
          });
        } else if (currURL === '/') {
          console.log("executing");
          return TweenLite.to($('.page-overlay'), 0.6, {
            top: 0,
            ease: "Power2.easeOut"
          });
        } else {
          return exec();
        }
      });
    }
    $(document).foundation();
    $('.header span').fitText(1.0, {
      maxFontSize: '300px',
      minFontSize: '50px'
    });
    Refresh();
    $('body').on('mouseenter', '.menu-item', function() {
      return TweenLite.to($(this).children(".menu-logo"), 0.3, {
        scaleX: 1.08,
        scaleY: 1.08,
        ease: "Power4.easeOut"
      });
    });
    $('body').on('mouseleave', '.menu-item', function() {
      return TweenLite.to($(this).children(".menu-logo"), 0.2, {
        scaleX: 1,
        scaleY: 1
      });
    });
    $('body').on('mouseenter', '.nonCurr', function() {
      return TweenLite.to($(this).children(".menu-item"), 0.3, {
        scaleX: 1.08,
        scaleY: 1.08,
        ease: "Power4.easeOut"
      });
    });
    $('body').on('mouseleave', '.nonCurr', function() {
      return TweenLite.to($(this).children(".menu-item"), 0.2, {
        scaleX: 1,
        scaleY: 1
      });
    });
    return $('body').on('click', '.menu_cta', function() {
      var pageurl;
      pageurl = $(this).attr('href');
      if (browser !== 'Safari') {
        getPage(pageurl + '_fetch');
        return false;
      }
    });
  }));

  Refresh = function() {
    $('.experience').each(function() {
      var experience, imageName;
      imageName = $(this).attr('image');
      experience = $(this).attr('experience');
      $(this).css({
        background: 'url(img/' + imageName + ') no-repeat 18px 13px'
      });
      return $(this).html(experience);
    });
    return $('.tech-logo, .misc-skill').each(function() {
      var imageName;
      imageName = $(this).attr('image');
      return $(this).css({
        background: 'url(img/' + imageName + ')'
      });
    });
  };

  getPage = function(url) {
    var request;
    console.log(url);
    request = $.get(url);
    return request.success(function(data) {
      TweenLite.to($('.page-overlay'), 0.6, {
        top: 0,
        ease: "Power2.easeOut"
      });
      return updateContent(data.data, url.charAt(1).toUpperCase() + url.slice(0, "_fetch".length * -1).slice(2), url.slice(0, "_fetch".length * -1));
    });
  };

  updateContent = function(data, title, url) {
    if (data === null) {
      return;
    }
    if (url === '/') {
      $('.container').html(data);
    } else {
      $('.page-overlay').html(data);
    }
    History.pushState({
      title: title,
      url: url,
      data: data
    }, title, url);
    return Refresh();
  };

}).call(this);
